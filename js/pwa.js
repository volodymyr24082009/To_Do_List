class PWAManager {
  constructor() {
    this.deferredPrompt = null
    this.isInstalled = false
    this.isOnline = navigator.onLine
    this.syncQueue = []

    this.init()
  }

  async init() {
    console.log("üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è PWA Manager...")

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è Service Worker
    await this.registerServiceWorker()

    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π
    this.setupEventListeners()

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    this.checkInstallability()

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è push —Å–ø–æ–≤—ñ—â–µ–Ω—å
    await this.initializePushNotifications()

    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ—Ñ–ª–∞–π–Ω —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
    this.setupOfflineHandling()

    // –û–±—Ä–æ–±–∫–∞ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
    this.handleURLParams()

    console.log("‚úÖ PWA Manager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
  }

  async registerServiceWorker() {
    if ("serviceWorker" in navigator) {
      try {
        const registration = await navigator.serviceWorker.register("/sw.js")
        console.log("‚úÖ Service Worker –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ:", registration.scope)

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å
        registration.addEventListener("updatefound", () => {
          const newWorker = registration.installing
          newWorker.addEventListener("statechange", () => {
            if (newWorker.state === "installed" && navigator.serviceWorker.controller) {
              this.showUpdateNotification()
            }
          })
        })

        return registration
      } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó Service Worker:", error)
      }
    }
  }

  setupEventListeners() {
    // –ü–æ–¥—ñ—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PWA
    window.addEventListener("beforeinstallprompt", (e) => {
      console.log("üíæ PWA –≥–æ—Ç–æ–≤–µ –¥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è")
      e.preventDefault()
      this.deferredPrompt = e
      this.showInstallButton()
    })

    // –ü–æ–¥—ñ—è –ø—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    window.addEventListener("appinstalled", () => {
      console.log("üéâ PWA –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
      this.isInstalled = true
      this.hideInstallButton()
      this.showNotification("–î–æ–¥–∞—Ç–æ–∫ —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", "success")
    })

    // –°—Ç–∞—Ç—É—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    window.addEventListener("online", () => {
      console.log("üåê –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ")
      this.isOnline = true
      this.showNotification("–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ", "success")
      this.syncOfflineData()
    })

    window.addEventListener("offline", () => {
      console.log("üì± –ü–µ—Ä–µ—Ö—ñ–¥ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º")
      this.isOnline = false
      this.showNotification("–ü—Ä–∞—Ü—é—î–º–æ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º—ñ", "info")
    })

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    window.addEventListener("error", (e) => {
      console.error("–ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:", e.error)
    })

    window.addEventListener("unhandledrejection", (e) => {
      console.error("–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞ Promise:", e.reason)
    })
  }

  checkInstallability() {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –¥–æ–¥–∞—Ç–æ–∫ –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    if (window.matchMedia("(display-mode: standalone)").matches || window.navigator.standalone === true) {
      this.isInstalled = true
      console.log("üì± –î–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ —è–∫ PWA")
    }

    // –ü–æ–∫–∞–∑ –∫–Ω–æ–ø–∫–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö –±—Ä–∞—É–∑–µ—Ä—ñ–≤
    if (!this.isInstalled && this.isPWASupported()) {
      setTimeout(() => {
        if (!this.deferredPrompt) {
          this.showInstallPromotion()
        }
      }, 10000) // –ü–æ–∫–∞–∑–∞—Ç–∏ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    }
  }

  isPWASupported() {
    return "serviceWorker" in navigator && "PushManager" in window && "Notification" in window
  }

  showInstallButton() {
    let installButton = document.getElementById("installButton")

    if (!installButton) {
      installButton = document.createElement("button")
      installButton.id = "installButton"
      installButton.className = "install-button"
      installButton.innerHTML = "üì± –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫"
      installButton.onclick = () => this.installPWA()

      // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –¥–æ header
      const header = document.querySelector(".header")
      if (header) {
        header.appendChild(installButton)
      }
    }

    installButton.style.display = "block"
  }

  hideInstallButton() {
    const installButton = document.getElementById("installButton")
    if (installButton) {
      installButton.style.display = "none"
    }
  }

  async installPWA() {
    if (!this.deferredPrompt) {
      this.showNotification("–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ", "error")
      return
    }

    try {
      this.deferredPrompt.prompt()
      const { outcome } = await this.deferredPrompt.userChoice

      if (outcome === "accepted") {
        console.log("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≥–æ–¥–∏–≤—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ PWA")
      } else {
        console.log("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥—Ö–∏–ª–∏–≤ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PWA")
      }

      this.deferredPrompt = null
      this.hideInstallButton()
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PWA:", error)
      this.showNotification("–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è", "error")
    }
  }

  showInstallPromotion() {
    const promotion = document.createElement("div")
    promotion.className = "install-promotion"
    promotion.innerHTML = `
      <div class="promotion-content">
        <div class="promotion-icon">üì±</div>
        <div class="promotion-text">
          <h3>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ TO DO LIST</h3>
          <p>–û—Ç—Ä–∏–º–∞–π—Ç–µ —à–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø —Ç–∞ –ø—Ä–∞—Ü—é–π—Ç–µ –æ—Ñ–ª–∞–π–Ω</p>
        </div>
        <div class="promotion-actions">
          <button class="btn btn-primary" onclick="pwaManager.installPWA()">
            –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏
          </button>
          <button class="btn btn-secondary" onclick="this.parentElement.parentElement.parentElement.remove()">
            –ü—ñ–∑–Ω—ñ—à–µ
          </button>
        </div>
      </div>
    `

    document.body.appendChild(promotion)

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      if (promotion.parentElement) {
        promotion.remove()
      }
    }, 30000)
  }

  async initializePushNotifications() {
    if (!("Notification" in window) || !("PushManager" in window)) {
      console.log("‚ùå Push —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å—Å—è")
      return
    }

    try {
      const permission = await Notification.requestPermission()

      if (permission === "granted") {
        console.log("‚úÖ –î–æ–∑–≤—ñ–ª –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ")
        await this.subscribeToPush()
      } else {
        console.log("‚ùå –î–æ–∑–≤—ñ–ª –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ")
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó push —Å–ø–æ–≤—ñ—â–µ–Ω—å:", error)
    }
  }

  async subscribeToPush() {
    try {
      const registration = await navigator.serviceWorker.ready

      const subscription = await registration.pushManager.subscribe({
        userVisibleOnly: true,
        applicationServerKey: this.urlBase64ToUint8Array(
          "BEl62iUYgUivxIkv69yViEuiBIa40HI80YmqRcU", // –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à VAPID –∫–ª—é—á
        ),
      })

      console.log("‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ push —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:", subscription)

      // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      await this.sendSubscriptionToServer(subscription)
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ push:", error)
    }
  }

  urlBase64ToUint8Array(base64String) {
    const padding = "=".repeat((4 - (base64String.length % 4)) % 4)
    const base64 = (base64String + padding).replace(/-/g, "+").replace(/_/g, "/")

    const rawData = window.atob(base64)
    const outputArray = new Uint8Array(rawData.length)

    for (let i = 0; i < rawData.length; ++i) {
      outputArray[i] = rawData.charCodeAt(i)
    }
    return outputArray
  }

  async sendSubscriptionToServer(subscription) {
    try {
      const response = await fetch("/api/push/subscribe", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("authToken")}`,
        },
        body: JSON.stringify(subscription),
      })

      if (response.ok) {
        console.log("‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏:", error)
    }
  }

  setupOfflineHandling() {
    // –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–Ω—è fetch –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –æ—Ñ–ª–∞–π–Ω –æ–±—Ä–æ–±–∫–∏
    const originalFetch = window.fetch

    window.fetch = async (...args) => {
      try {
        const response = await originalFetch(...args)
        return response
      } catch (error) {
        if (!this.isOnline) {
          // –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —á–µ—Ä–≥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
          this.addToSyncQueue(args[0], args[1])

          // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
          return this.getOfflineResponse(args[0])
        }
        throw error
      }
    }
  }

  addToSyncQueue(url, options) {
    this.syncQueue.push({
      url,
      options,
      timestamp: Date.now(),
    })

    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage
    localStorage.setItem("pwa_sync_queue", JSON.stringify(this.syncQueue))
  }

  async syncOfflineData() {
    const savedQueue = localStorage.getItem("pwa_sync_queue")
    if (savedQueue) {
      this.syncQueue = JSON.parse(savedQueue)
    }

    for (const item of this.syncQueue) {
      try {
        await fetch(item.url, item.options)
        console.log("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ:", item.url)
      } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:", error)
      }
    }

    // –û—á–∏—â–µ–Ω–Ω—è —á–µ—Ä–≥–∏ –ø—ñ—Å–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
    this.syncQueue = []
    localStorage.removeItem("pwa_sync_queue")
  }

  async getOfflineResponse(url) {
    // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∞–±–æ –∑–∞–≥–ª—É—à–∫–∏
    if (url.includes("/api/user/tasks")) {
      const cachedTasks = localStorage.getItem("cached_tasks")
      return new Response(cachedTasks || "[]", {
        status: 200,
        headers: { "Content-Type": "application/json" },
      })
    }

    return new Response(JSON.stringify({ offline: true }), {
      status: 200,
      headers: { "Content-Type": "application/json" },
    })
  }

  handleURLParams() {
    const urlParams = new URLSearchParams(window.location.search)

    // –û–±—Ä–æ–±–∫–∞ —à–≤–∏–¥–∫–∏—Ö –¥—ñ–π
    if (urlParams.get("action") === "add-task") {
      setTimeout(() => {
        const taskInput = document.getElementById("taskInput")
        if (taskInput) {
          taskInput.focus()
        }
      }, 1000)
    }

    if (urlParams.get("filter")) {
      const filter = urlParams.get("filter")
      setTimeout(() => {
        const filterBtn = document.querySelector(`[data-filter="${filter}"]`)
        if (filterBtn) {
          filterBtn.click()
        }
      }, 1000)
    }
  }

  showUpdateNotification() {
    const notification = document.createElement("div")
    notification.className = "update-notification"
    notification.innerHTML = `
      <div class="update-content">
        <span>üîÑ –î–æ—Å—Ç—É–ø–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É</span>
        <button onclick="window.location.reload()" class="btn btn-primary">
          –û–Ω–æ–≤–∏—Ç–∏
        </button>
      </div>
    `

    document.body.appendChild(notification)

    setTimeout(() => {
      if (notification.parentElement) {
        notification.remove()
      }
    }, 10000)
  }

  showNotification(message, type = "info") {
    // –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å
    if (window.todoApp && window.todoApp.showNotification) {
      window.todoApp.showNotification(message, type)
    } else if (window.authManager && window.authManager.showNotification) {
      window.authManager.showNotification(message, type)
    } else if (window.profileManager && window.profileManager.showNotification) {
      window.profileManager.showNotification(message, type)
    } else {
      console.log(`${type.toUpperCase()}: ${message}`)
    }
  }

  // –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –¥–∞–Ω–∏–º–∏
  async cacheUserData(data, key) {
    try {
      localStorage.setItem(`cached_${key}`, JSON.stringify(data))

      // –¢–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ IndexedDB —á–µ—Ä–µ–∑ Service Worker
      if ("serviceWorker" in navigator) {
        const registration = await navigator.serviceWorker.ready
        registration.active.postMessage({
          type: "CACHE_DATA",
          key,
          data,
        })
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö:", error)
    }
  }

  getCachedUserData(key) {
    try {
      const cached = localStorage.getItem(`cached_${key}`)
      return cached ? JSON.parse(cached) : null
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö:", error)
      return null
    }
  }

  // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è PWA
  trackPWAUsage() {
    const usage = {
      isInstalled: this.isInstalled,
      isOnline: this.isOnline,
      timestamp: Date.now(),
      userAgent: navigator.userAgent,
      displayMode: window.matchMedia("(display-mode: standalone)").matches ? "standalone" : "browser",
    }

    console.log("üìä PWA Usage:", usage)

    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
    if (this.isOnline) {
      fetch("/api/analytics/pwa", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(usage),
      }).catch(() => {}) // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏
    }
  }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è PWA Manager
let pwaManager

document.addEventListener("DOMContentLoaded", () => {
  pwaManager = new PWAManager()

  // –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
  setTimeout(() => {
    pwaManager.trackPWAUsage()
  }, 5000)
})

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
window.pwaManager = pwaManager
